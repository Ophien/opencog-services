FROM singularitynet/opencog-deps

ARG snetd_version
ARG private_key_for_metering
ARG etcd_end_point

RUN apt-get update && apt-get -y upgrade

RUN apt-get install -y \
            nlohmann-json-dev \
            libcurl4-gnutls-dev \
            cxxtest \
            build-essential \
            autoconf \
            libtool \
            pkg-config \
            libgflags-dev \
            libgtest-dev \
            clang \
            libc++-dev \
            git \
            curl \
            nano \
            wget \
            libudev-dev \
            libusb-1.0-0-dev \
            nodejs \
            npm \
            python3 \
            python3-pip \
            libboost-all-dev

RUN cd / && \
    git clone https://github.com/singnet/cogutil.git && \
    cd cogutil && \
    mkdir build && \
    cd build && \
    cmake .. && \
    make -j$(nproc) && \
    make install && \
    ldconfig

RUN cd / && \
    git clone https://github.com/singnet/atomspace.git && \
    cd atomspace && \
    mkdir build && \
    cd build && \
    cmake .. && \
    make -j$(nproc) && \
    make install && \
    ldconfig

RUN cd / && \
    git clone https://github.com/singnet/ure.git && \
    cd ure && \
    mkdir build && \
    cd build && \
    cmake .. && \
    make -j$(nproc) && \
    make install && \
    ldconfig

RUN cd / && \
    git clone https://github.com/singnet/cogserver.git && \
    cd cogserver && \
    mkdir build && \
    cd build && \
    cmake .. && \
    make -j$(nproc) && \
    make install && \
    ldconfig

RUN cd / && \
    git clone https://github.com/singnet/attention.git && \
    cd attention && \
    mkdir build && \
    cd build && \
    cmake .. && \
    make -j$(nproc) && \
    make install && \
    ldconfig

RUN cd / && \
    git clone https://github.com/aconchillo/guile-json.git && \
    cd /guile-json && \
    apt-get install -y dh-autoreconf && \
    autoreconf -vif && \
    ./configure --prefix=/usr --libdir=/usr/lib && \
    make && \
    make install && \
    ldconfig

RUN cd / && \
    git clone https://github.com/singnet/opencog.git && \
    cd /opencog && \
    mkdir build && \
    cd build && \
    cmake .. && \
    make -j$(nproc) && \
    make install && \
    ldconfig

RUN cd / && \
    git clone https://github.com/singnet/miner.git && \
    cd /miner && \
    mkdir build && \
    cd build && \
    cmake .. && \
    make -j$(nproc) && \
    make install && \
    ldconfig

RUN cd / && \
    git clone https://github.com/singnet/agi-bio.git && \
    cd /agi-bio && \
    mkdir build && \
    cd build && \
    cmake .. && \
    make -j$(nproc) && \
    make install && \
    ldconfig

RUN git clone -b $(curl -L https://grpc.io/release) https://github.com/grpc/grpc /var/local/git/grpc && \
    cd /var/local/git/grpc && \
    git submodule update --init && \
    make -j$(nproc) && make install && ldconfig && \
    cd third_party/protobuf && \
    make install && make clean && ldconfig && \
    cd /var/local/git/grpc && make clean && \
    cd / && \
    rm -rf /var/local/git/grpc

COPY . /opencog-services

# install snet daemon
RUN SNETD_GIT_VERSION=`curl -s https://api.github.com/repos/singnet/snet-daemon/releases/latest | grep -oP '$ && \
    SNETD_VERSION=${snetd_version:-${SNETD_GIT_VERSION}} && \
    mkdir snet-daemon && \
    cd snet-daemon && \
    wget -q https://github.com/singnet/snet-daemon/releases/download/$SNETD_VERSION/snet-daemon-$SNETD_VERSION-linux-amd64.tar.gz && \
    tar -xvzf snet-daemon-$SNETD_VERSION-linux-amd64.tar.gz && \
    mv ./snet-daemon-$SNETD_VERSION-linux-amd64/snetd /usr/bin/snetd && \
    cd .. && \
    rm -rf snet-daemon*

# configure library path for opencog
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib/opencog:/usr/local/lib/opencog/modules
ENV GUILE_AUTO_COMPILE=0

# set working directory
WORKDIR /opencog-services

# set private key for metering and etcd end-point
RUN cat ./snetd_configs/snetd.mainnet.json | sed "s/__PRIVATE_KEY_FOR_METERING__/${private_key_for_metering}/g" > ./snetd_configs/snetd.mainnet.json
RUN cat ./snetd_configs/snetd.ropsten.json | sed "s/__METERING_END_POINT__/${etcd_end_point}/g" > ./snetd_configs/snetd.ropsten.json

# compile source
RUN cd src && \
    make

# set default workdir
WORKDIR /opencog-services
