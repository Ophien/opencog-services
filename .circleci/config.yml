version: 2
jobs:
  service_up:
    docker:
    - image: circleci/python:3.6.6-node
    working_directory: ~/singnet
    environment:
      ORG: singnet
      SNETD_PORT: 7031
      DOCKER_ORG: singularitynet
      DOCKER_BASIC_IMAGE_NAME: senna_opencog_services_basic
      DOCKER_IMAGE_NAME: senna_opencog_services
      DOCKER_CONTAINER_NAME: SENNA_OPENCOG_SERVICES
      DOCKER_IMAGE_NAME_STAGING: _opencog_services_staging
      DOCKER_CONTAINER_NAME_STAGING: _OPENCOG_SERVICES_STAGING
      REPOSITORY: opencog-services
      BRANCH: master
      GIT_OWNER: singnet
      SERVICE_NAME: opencog
      SERVICE_START_SCRIPT: scripts/service_up.sh
      SERVICE_TEST_SCRIPT: bin/server
      TEST_SCRIPT: bin/runTests
      COMPLIANCE_CHECK_SCRIPT: scripts/compliance_check.sh
    steps:
    - run:
        name: Build basic docker image
        command: |
          ssh -o "StrictHostKeyChecking no" $SSH_USER@$SSH_HOST << EOF
            docker image build -t $DOCKER_BASIC_IMAGE_NAME https://raw.githubusercontent.com/$GIT_OWNER/$REPOSITORY/$BRANCH/basic-dockerfile
          EOF
    - run:
        name: Build Docker container
        command: |
          ssh -o "StrictHostKeyChecking no" $SSH_USER@$SSH_HOST << EOF
            docker stop $CIRCLE_USERNAME$DOCKER_CONTAINER_NAME_STAGING || true
            docker rm $CIRCLE_USERNAME$DOCKER_CONTAINER_NAME_STAGING || true
            docker build --no-cache -t $CIRCLE_USERNAME$DOCKER_IMAGE_NAME_STAGING https://github.com/$GIT_OWNER/$REPOSITORY.git#$BRANCH
          EOF
    - run:
        name: Start service for testing
        command: |
          ssh -o "StrictHostKeyChecking no" $SSH_USER@$SSH_HOST << EOF
            docker run --name $CIRCLE_USERNAME$DOCKER_CONTAINER_NAME_STAGING \
              -di $CIRCLE_USERNAME$DOCKER_IMAGE_NAME_STAGING $SERVICE_TEST_SCRIPT
          EOF
    - run:
        name: Execute compliance check
        command: |
          ssh -o "StrictHostKeyChecking no" $SSH_USER@$SSH_HOST << EOF
            docker exec -i $CIRCLE_USERNAME$DOCKER_CONTAINER_NAME_STAGING $COMPLIANCE_CHECK_SCRIPT
          EOF
    - run:
        name: Execute regression tests
        command: |
          ssh -o "StrictHostKeyChecking no" $SSH_USER@$SSH_HOST << EOF
            docker exec -i $CIRCLE_USERNAME$DOCKER_CONTAINER_NAME_STAGING $TEST_SCRIPT
          EOF
    - run:
        name: Deploy service
        command: |
          ssh -o "StrictHostKeyChecking no" $SSH_USER@$SSH_HOST << EOF
              if [ $CIRCLE_REPOSITORY_URL = "git@github.com:$GIT_OWNER/$REPOSITORY.git" ] && [ $CIRCLE_BRANCH = "$BRANCH" ] ; then
                  echo "Deploying service"
                  docker stop $CIRCLE_USERNAME$DOCKER_CONTAINER_NAME_STAGING
                  docker rm $CIRCLE_USERNAME$DOCKER_CONTAINER_NAME_STAGING
                  docker stop $DOCKER_CONTAINER_NAME || true
                  docker rm $DOCKER_CONTAINER_NAME || true
                  docker rmi $DOCKER_IMAGE_NAME || true
                  docker image tag $CIRCLE_USERNAME$DOCKER_IMAGE_NAME_STAGING $DOCKER_IMAGE_NAME
                  docker rmi $CIRCLE_USERNAME$DOCKER_IMAGE_NAME_STAGING
                  docker run --name $DOCKER_CONTAINER_NAME --restart unless-stopped -p $SNETD_PORT:$SNETD_PORT -di $DOCKER_IMAGE_NAME $SERVICE_START_SCRIPT
              else
                  docker stop $CIRCLE_USERNAME$DOCKER_CONTAINER_NAME_STAGING
                  docker rm $CIRCLE_USERNAME$DOCKER_CONTAINER_NAME_STAGING
                  docker rmi $CIRCLE_USERNAME$DOCKER_IMAGE_NAME_STAGING
                  echo "Repository: $CIRCLE_REPOSITORY_URL"
                  echo "Branch: $CIRCLE_BRANCH"
                  echo "================================================================================"
                  echo "                        Service WILL NOT be deployed"
                  echo "================================================================================"
              fi
          EOF

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - service_up
